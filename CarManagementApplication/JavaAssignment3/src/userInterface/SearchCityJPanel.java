/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface;

import business.Car;
import business.CarInformationList;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Siddhi
 */
public class SearchCityJPanel extends javax.swing.JPanel {

     private JPanel userProcesscontainer;
     private CarInformationList carInformationList;
     private String city;
    /**
     * Creates new form SearchCityJPanel
     */
    public SearchCityJPanel(JPanel userProcesscontainer,CarInformationList carInformationList, String city) {
        initComponents();
        this.userProcesscontainer = userProcesscontainer;
        this.carInformationList = carInformationList;
        this.city = city;
        populateTable();
        
        
    }

    
    private void populateTable()
     {
         DefaultTableModel dtm = (DefaultTableModel) tblCarSearch.getModel();
         dtm.setRowCount(0);
         
         for(Car car:carInformationList.getcarList(city))
         {
             Object[] row = new Object[10]; 
             row[0]=car;
             //row[1]=car.getBrand();
             row[1]=car.getManufactured_year();
             row[2]=car.getMin_seats();
             row[3]=car.getMax_seats();
             row[4]=car.getSerial_num();
             row[5]=car.getModel_num();
             row[6]=car.getAvailble_city();
             row[7]=car.isMaintenance_certificate();
             row[8]=car.isAvailable();
             
             dtm.addRow(row);
         }
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCarSearch = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        btnAvailability = new javax.swing.JButton();
        btnFirstAvailCar = new javax.swing.JButton();
        btnUnavailCar = new javax.swing.JButton();
        btnExpireMaintCert = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 204));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("View Car Details");

        tblCarSearch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Brand Name", "Manufactured Year", "Minimum Seats", "Maximum Seats", "Serial Number", "Model Number", "Available City", "Maintenance Certificate", "Availability"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCarSearch);

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("<Back");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnAvailability.setBackground(new java.awt.Color(204, 204, 204));
        btnAvailability.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAvailability.setText("Available Cars");
        btnAvailability.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAvailability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvailabilityActionPerformed(evt);
            }
        });

        btnFirstAvailCar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnFirstAvailCar.setText("First Available Car");
        btnFirstAvailCar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnFirstAvailCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstAvailCarActionPerformed(evt);
            }
        });

        btnUnavailCar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnUnavailCar.setText("Unavailable Cars");
        btnUnavailCar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnUnavailCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnavailCarActionPerformed(evt);
            }
        });

        btnExpireMaintCert.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnExpireMaintCert.setText("Expired Maintenance Certificate");
        btnExpireMaintCert.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnExpireMaintCert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExpireMaintCertActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 915, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnFirstAvailCar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(120, 120, 120)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnUnavailCar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnExpireMaintCert, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 693, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAvailability, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUnavailCar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFirstAvailCar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExpireMaintCert, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(187, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcesscontainer.remove(this);
        CardLayout layout = (CardLayout) userProcesscontainer.getLayout();
        layout.previous(userProcesscontainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnAvailabilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvailabilityActionPerformed
        // TODO add your handling code here:
        //Search by City Name
        //Car result = carInformationList.searchCar(txtCity.getText());
        //String city = txtCity.getText();
        //ArrayList<Car> AvailList = new ArrayList<Car>();
        
        /*SearchCityJPanel panel = new SearchCityJPanel(userProcesscontainer, carInformationList, city);
        userProcesscontainer.add("SearchCityJPanel",panel);
        CardLayout layout = (CardLayout) userProcesscontainer.getLayout();
        layout.next(userProcesscontainer);*/
        SearchByAvail();

    }//GEN-LAST:event_btnAvailabilityActionPerformed
 private void SearchByAvail()
     {
         DefaultTableModel dtm = (DefaultTableModel) tblCarSearch.getModel();
         dtm.setRowCount(0);
         
          for(Car car1:carInformationList.getCarSearch())
         {
             Object[] row = new Object[10]; 
             row[0]=car1;
             row[0]=car1.getBrand();
             row[1]=car1.getManufactured_year();
             row[2]=car1.getMin_seats();
             row[3]=car1.getMax_seats();
             row[4]=car1.getSerial_num();
             row[5]=car1.getModel_num();
             row[6]=car1.getAvailble_city();
             row[7]=car1.isMaintenance_certificate();
             row[8]=car1.isAvailable();
             
             dtm.addRow(row);
         }
     }
 
    private void btnUnavailCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnavailCarActionPerformed
        // TODO add your handling code here:
        UnavailCar();
        
        
    }//GEN-LAST:event_btnUnavailCarActionPerformed
    //Find Unavailable Cars from the list
    private void UnavailCar()
     {
         DefaultTableModel dtm = (DefaultTableModel) tblCarSearch.getModel();
         dtm.setRowCount(0);
         
          for(Car car1:carInformationList.getCarUnavailable())
         {
             Object[] row = new Object[10]; 
             row[0]=car1;
             row[0]=car1.getBrand();
             row[1]=car1.getManufactured_year();
             row[2]=car1.getMin_seats();
             row[3]=car1.getMax_seats();
             row[4]=car1.getSerial_num();
             row[5]=car1.getModel_num();
             row[6]=car1.getAvailble_city();
             row[7]=car1.isMaintenance_certificate();
             row[8]=car1.isAvailable();
             dtm.addRow(row);
         }
     }
    
    //Find first available car
    private void btnFirstAvailCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstAvailCarActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) tblCarSearch.getModel();
        dtm.setRowCount(0);
         for(Car car1:carInformationList.getFirstAvailcar())
         {
             Object[] row = new Object[10]; 
             row[0]=car1;
             row[0]=car1.getBrand();
             row[1]=car1.getManufactured_year();
             row[2]=car1.getMin_seats();
             row[3]=car1.getMax_seats();
             row[4]=car1.getSerial_num();
             row[5]=car1.getModel_num();
             row[6]=car1.getAvailble_city();
             row[7]=car1.isMaintenance_certificate();
             row[8]=car1.isAvailable();
             
             dtm.addRow(row);
    }//GEN-LAST:event_btnFirstAvailCarActionPerformed
    }
    private void btnExpireMaintCertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExpireMaintCertActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) tblCarSearch.getModel();
        dtm.setRowCount(0);
         for(Car car1:carInformationList.getExpireCert())
         {
             Object[] row = new Object[10]; 
             row[0]=car1;
             row[0]=car1.getBrand();
             row[1]=car1.getManufactured_year();
             row[2]=car1.getMin_seats();
             row[3]=car1.getMax_seats();
             row[4]=car1.getSerial_num();
             row[5]=car1.getModel_num();
             row[6]=car1.getAvailble_city();
             row[7]=car1.isMaintenance_certificate();
             row[8]=car1.isAvailable();
             dtm.addRow(row);
    }                            
    }//GEN-LAST:event_btnExpireMaintCertActionPerformed
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAvailability;
    private javax.swing.JButton btnExpireMaintCert;
    private javax.swing.JButton btnFirstAvailCar;
    private javax.swing.JButton btnUnavailCar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCarSearch;
    // End of variables declaration//GEN-END:variables
}
